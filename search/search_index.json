{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"home/","title":"Rajan's python guide for those who want to be amazing but hate jargon and want to be spoken to like a human being.","text":"<p>Welcome! Thanks for visiting my documentation page. I'm not in the business of wasting your time, so let's start with a brief intro and usage guide.</p> <p>Lots of us are bedroom developers turned professional. This transition can be intimidating, especially when you feel like you're surrounded by so many geniuses who have been coding since the womb. I'm with you and I can relate, which is why I've built this documentation. Stay with me, we'll be just fine.</p> <p>This site aims to bridge the gap between those relatively new to coding in a production environment, and the scary robust development fundamentals (OOP, Best Practices etc.).</p>"},{"location":"home/#style","title":"Style","text":"<p>This site was primarily built for my own education and recall, someone who is new to the software engineering/dev ecosystem. The style is therefore chatty and informal.</p> <p>This also comes with (at times) oversimplified definitions. The trade-off between writing like a coding purist and someone who doesn't want to sound like a twat was surprisingly hard. I ultimately decided to go for the latter option. If you believe this style takes away from the intricacies and details that are required to intimately understand coding principles, and by writing this documentation I am doing our coding forefathers a disservice, you are :</p> <ol> <li>Correct</li> <li>In desperate need of a shower</li> <li>Better off reading official documentation - this site probably isn't for you.</li> </ol> <p>If you want to understand code without being bombarded with jargon from the very beginning, this IS for you.</p> <p>Now we have all of that out of the way, please navigate to the bar on the side, and enjoy the education!</p> <p>With love, Rajan</p>"},{"location":"software-engineering/oop/wrappers-and-decorators/","title":"Introduction","text":"<p>blah blah blah</p>"},{"location":"software-engineering/oop/wrappers-and-decorators/#decorators","title":"Decorators","text":"<ul> <li>what are they</li> <li>when should they be used and why</li> <li>examples (good and bad ones)</li> <li>intuition</li> <li>reorder the above in whatever makes the most sense to someone who is new to this</li> </ul>"},{"location":"software-engineering/oop/wrappers-and-decorators/#wrappers","title":"Wrappers","text":"<ul> <li>what are they</li> <li>when should they be used and why</li> <li>examples (good and bad ones)</li> <li>intuition</li> <li>reorder the above in whatever makes the most sense to someone who is new to this</li> <li>'this is code?' <code>code</code></li> </ul> <p>tbh, can ask an LLM for the best structure for someone who is new to this stuff</p>"}]}